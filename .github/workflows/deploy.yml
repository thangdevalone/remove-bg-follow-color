name: Deploy Backend to AWS EC2

on:
  push:
    branches:
      - main
    paths:
      - "backend/**"

jobs:
  install-dependencies:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install dependencies
        run: |
          cd backend
          python -m pip install --upgrade pip
          pip install -r requirements.txt

  build-and-deploy:
    needs: install-dependencies
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry (GHCR)
        run: echo "${{ secrets.TOKEN_GITHUB }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Build and Push Docker image
        run: |
          IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/remove-bg-backend:latest
          cd backend
          docker build -t $IMAGE_NAME .
          docker push $IMAGE_NAME

      - name: Deploy on EC2
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            echo "${{ secrets.TOKEN_GITHUB }}" | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin

            IMAGE_NAME=ghcr.io/${{ github.repository_owner }}/remove-bg-backend:latest

            # Stop old container if exists
            docker stop remove-bg-backend-container || true
            docker rm remove-bg-backend-container || true

            # Pull latest image
            docker pull $IMAGE_NAME

            # Run container
            docker run -d \
              --name remove-bg-backend-container \
              -p 5000:5000 \
              --restart unless-stopped \
              $IMAGE_NAME

            # Clean up old images
            docker image prune -f
